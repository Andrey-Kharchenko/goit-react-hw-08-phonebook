{"version":3,"file":"static/js/688.826f6ec9.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/ContactList/ContactList.Styled.js","components/ContactList/ContactList.js","components/ContactsForm/ContactForm.Styled.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.Styled.js","components/Filter/Filter.js","components/UserMenu/UserMenu.Styled.js","components/UserMenu/UserMenu.jsx","pages/ContactsPage.jsx"],"sourcesContent":["const Loader = () => {\n  return (\n    <div>\n      <p>Load...</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const ContactListContainer = styled.div`\n  text-align: center;\n  margin: 20px;\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    font-size: 16px;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    \n    button {\n      background-color: #4caf50;\n      color: #FFFFFF;\n      padding: 5px 10px;\n      border: none;\n      border-radius: 5px;\n      font-size: 14px;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n    button:hover {\n    background-color: #45a049;\n    }\n  }\n`;","import { useSelector} from 'react-redux';\nimport Loader from 'components/Loader/Loader';\nimport { useDeleteContactMutation, useGetContactsQuery } from '../../redux/contactsApi';\nimport { ContactListContainer } from './ContactList.Styled';\n\nexport const ContactList = () => {\n  const { data: contacts, isLoading, error } = useGetContactsQuery();\n  const { filter } = useSelector(state => state.filter);\n  const [deleteContact] = useDeleteContactMutation();\n\n  if (isLoading && !error) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n  if (error) {\n    return (\n      <div>\n        <p>Ooops!!! Something went wrong!</p>\n        <p>Error:{error}</p>\n      </div>\n    );\n  }\n\n  const getFilteredContacts = () => {\n    return (contacts || []).filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <ContactListContainer>\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li key={id}>\n             {name}: {number}\n            <button\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </ContactListContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  margin: 20px;\n  form {\n    h2 {\n      font-size: 20px;\n      font-weight: 500;\n      text-align: start;\n      margin-bottom: 10px;\n      background: linear-gradient(90deg, #1b491d, #33a037);\n      -webkit-background-clip: text;\n      background-clip: text;\n      -webkit-text-fill-color: transparent;\n\n    }\n    input {\n      width: 100%;\n      padding: 10px;\n      margin-bottom: 16px;\n      border: 1px solid #656565;\n      border-radius: 3px;\n      font-size: 16px;\n      transition: border-color 0.3s ease;\n\n    &:focus {\n        outline: none;\n        border-color: #45a049; \n        transition: border-color 0.3s ease;\n        box-shadow: 0px 0px 10px rgba(42, 245, 152, 0.5);\n    }\n    }\n    button {\n      background-color: #4caf50;\n      color: #FFFFFF;\n      padding: 10px 20px;\n      border: none;\n      border-radius: 5px;\n      font-size: 18px;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n    button:hover {\n    background-color: #45a049;\n    transition: background-color 0.3s ease;\n    }\n  }\n`;","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport { useAddContactMutation, useGetContactsQuery } from '../../redux/contactsApi';\nimport { FormContainer } from './ContactForm.Styled';\n\nexport const ContactsForm = () => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const contact = {id: nanoid(), name, number };\n    const normalizedFind = name.toLocaleLowerCase();\n    contacts.find(contact => contact.name.toLocaleLowerCase() === normalizedFind)\n      ? Notiflix.Notify.warning(`${name} is already in contacts!`)\n      : addContact(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleFormSubmit}>\n        <h2>Name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <h2>Number</h2>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </FormContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  text-align: center;\n  margin: 20px;\n  label {\n    font-size: 18px;\n  }\n  input {\n    width: 100%;\n    padding: 10px;\n    margin-top: 8px;\n    border: 1px solid #656565;\n    border-radius: 5px;\n    font-size: 16px;\n\n    &:focus {\n    outline: none;\n    border-color: #45a049; \n    box-shadow: 0px 0px 10px rgba(42, 245, 152, 0.5);\n    }\n  }\n`;","import { useDispatch } from 'react-redux';\nimport {filterChanges } from '../../redux/filterSlice';\nimport { FilterContainer } from './Filter.Styled';\n\nexport const Filter = ({ searchInputId }) => {\n  const dispatch = useDispatch();\n  const changeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(filterChanges(value));\n  };\n\n  return (\n    <FilterContainer>\n      <label htmlFor={searchInputId}>Find contacts by name:</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={changeFilter}\n        id={searchInputId}\n      />\n    </FilterContainer>\n  );\n};\n","import styled from '@emotion/styled'\n\nexport const WelcomeContainer = styled.div`\n    display: flex; \n    align-items: center; \n    justify-content: space-around;\n    align-items: baseline;\n    gap: 40px;\n    text-align: center;\n    margin: 20px;\n    span {\n        color: transparent;\n        font-size: 20px; \n        font-weight: bold; \n        background: linear-gradient(90deg, #45a049, #4caf50);\n        -webkit-background-clip: text;\n        background-clip: text;\n        display: inline;\n    }\n    p {\n        font-size: 18px;\n        margin-bottom: 10px;\n    }\n    button {\n        background-color: #4caf50;\n        color: #FFFFFF;\n        padding: 10px 20px;\n        border: none;\n        border-radius: 5px;\n        font-size: 16px;\n        cursor: pointer;\n    }\n        button:hover {\n        background-color: #45a049;\n        transition: background-color 0.3s ease;\n    }\n`;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetCurrentUserQuery } from '../../redux/auth';\nimport { logOut } from '../../redux/auth/authSlice';\nimport { WelcomeContainer } from './UserMenu.Styled';\n\nfunction UserMenu() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const token = useSelector(state => state.auth.token);\n  const { data, isLoading } = useGetCurrentUserQuery(token);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n    navigate('/login');\n  };\n\n  return (\n    <WelcomeContainer>\n      <p>Welcome: {isLoading ? 'Your name ...' : <span>{data.name}</span>}</p>\n      <button type=\"button\" onClick={handleLogOut}>\n        Logout\n      </button>\n    </WelcomeContainer>\n  );\n}\n\nexport default UserMenu;\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { Filter } from 'components/Filter/Filter';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport React from 'react';\n\nimport styled from '@emotion/styled';\n\nconst PageContainer = styled.div`\n  text-align: center;\n  margin: 20px;\n`;\n\nconst PageTitle = styled.h2`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n\nfunction ContactsPage() {\n  return (\n    <PageContainer>\n      <UserMenu />\n      <PageTitle>ContactsForm</PageTitle>\n      <ContactsForm />\n      <PageTitle>Contacts</PageTitle>\n      <Filter />\n      <ContactList />\n    </PageContainer>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["ContactListContainer","styled","ContactList","useGetContactsQuery","contacts","data","isLoading","error","filter","useSelector","state","useDeleteContactMutation","deleteContact","filteredContacts","contact","name","toLowerCase","includes","map","id","number","type","onClick","FormContainer","ContactsForm","useAddContactMutation","addContact","useState","setName","setNumber","handleInputChange","event","currentTarget","value","reset","onSubmit","evt","preventDefault","nanoid","normalizedFind","toLocaleLowerCase","find","Notiflix","onChange","pattern","title","required","FilterContainer","Filter","searchInputId","dispatch","useDispatch","htmlFor","filterChanges","WelcomeContainer","navigate","useNavigate","token","auth","useGetCurrentUserQuery","logOut","PageContainer","PageTitle"],"sourceRoot":""}